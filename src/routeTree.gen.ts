/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/~__root'
import { Route as IndexRouteImport } from './routes/~index'
import { Route as AuthSignupRouteImport } from './routes/~_auth/~signup'
import { Route as AuthLoginRouteImport } from './routes/~_auth/~login'
import { Route as ProfileIndexRouteImport } from './routes/~profile/~index'
import { Route as ForumIndexRouteImport } from './routes/~forum/~index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/_auth/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginRoute = AuthLoginRouteImport.update({
  id: '/_auth/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileIndexRoute = ProfileIndexRouteImport.update({
  id: '/profile/',
  path: '/profile/',
  getParentRoute: () => rootRouteImport,
} as any)
const ForumIndexRoute = ForumIndexRouteImport.update({
  id: '/forum/',
  path: '/forum/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forum': typeof ForumIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forum': typeof ForumIndexRoute
  '/profile': typeof ProfileIndexRoute
  '/login': typeof AuthLoginRoute
  '/signup': typeof AuthSignupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/forum/': typeof ForumIndexRoute
  '/profile/': typeof ProfileIndexRoute
  '/_auth/login': typeof AuthLoginRoute
  '/_auth/signup': typeof AuthSignupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/forum' | '/profile' | '/login' | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/forum' | '/profile' | '/login' | '/signup'
  id:
    | '__root__'
    | '/'
    | '/forum/'
    | '/profile/'
    | '/_auth/login'
    | '/_auth/signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ForumIndexRoute: typeof ForumIndexRoute
  ProfileIndexRoute: typeof ProfileIndexRoute
  AuthLoginRoute: typeof AuthLoginRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile/': {
      id: '/profile/'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forum/': {
      id: '/forum/'
      path: '/forum'
      fullPath: '/forum'
      preLoaderRoute: typeof ForumIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ForumIndexRoute: ForumIndexRoute,
  ProfileIndexRoute: ProfileIndexRoute,
  AuthLoginRoute: AuthLoginRoute,
  AuthSignupRoute: AuthSignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
